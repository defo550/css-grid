/* -----------------------------------------------------------------------------
   CSS Grid
   -------------------------------------------------------------------------- */
/**
 * CSS Grid is a lightweight grid framework that is non-float based.
 * Utilizes SASS's placeholder (i.e. %) functionality to easiy extend and
 * create your own selectors, modifiers, and sub-modules for your project
 * needs.
 *
 * author: Christopher DeFelice
 * twitter: @defo550
 *
 * Dependency:
 *  SASS v3.2.0+
 *
 * License:
 *  MIT license
 *
 * Track SASS changes (from Terminal or command prompt)
 * $ Run sass --watch css/libs/app.scss:css/main.css
 */
/* -----------------------------------------------------------------------------
   Base
   -------------------------------------------------------------------------- */
* {
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

html {
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%; }

body {
  margin: 0 24px;
  font: 100%/1.5 "Helvetica Neue", Arial, Helvetica, sans-serif; }

/* Headers */
h1,
h2 {
  margin: 0;
  font-family: Helvetica, "Helvetica Neue", Arial, sans-serif; }

h1 {
  font-size: 2em; }

/* Paragraphs */
p {
  margin: 1em 0; }

.example {
  margin-bottom: 24px;
  padding: 10px;
  background-color: #e2e2e2; }

/* -----------------------------------------------------------------------------
   Grid
   -------------------------------------------------------------------------- */
/**
 * Base grid structure.
 *
 * Placeholder structure:
 *   %grid: Will %cell(s) together in a horizontal grid.
 *   %cell: Split's up a %grid into sections.
 *
 * Example extending placeholders:
 *  .grid {
 *    @extend %grid;
 *  }
 *  .cell {
 *    @extend %cell;
 *  }
 */
/* Grid Container
   -------------------------------------------------------------------------- */
/**
 * 1. Pulls %grid to the left to compensate for the padding-left set on the 
 * %cell placeholder.
 * 2. Will remove random white-space b/w child HTML elements that are set to
 * 'display: inline-block.'
 */
.grid {
  display: block;
  margin: 0 0 0 -24px;
  /* 1 */
  letter-spacing: -0.31em;
  /* 2 */ }

/* Cell Module
   -------------------------------------------------------------------------- */
/**
 * Placeholder for cell components.
 * Can easily extend grid placeholder to sidebars, etc.
 * 
 * 1. Key declaration for setting non-floated grid.
 * 2. Set default width.
 * 3. Create a gutter b/w each cell module.
 * 4. Reset inherited text styles set in %grid.
 * 5. Align content.
 */
[class*="cell-"] {
  display: inline-block;
  /* 1 */
  width: 100%;
  /* 2 */
  margin: 0;
  padding: 0 0 0 24px;
  /* 3 */
  letter-spacing: normal;
  /* 4 */
  vertical-align: top;
  /* 5 */ }

/**
  * Example Grid modifiers by extending %grid.
  *
  * Example CSS:;
  * .grid--spacing {
  *   @extend %grid;
  *   margin-top: $cell-gutter;
  *   margin-bottom: $cell-gutter;
  * }
  *
  * .grid--padding {
  *   @extend %grid;
  *   padding: $cell-gutter $cell-gutter $cell-gutter 0;
  * }
  *
  * Example html:
  *   <div class="grid--spacing"> // cells </div>
  */
/* Cell dimensions
   -------------------------------------------------------------------------- */
/**
 * Create percentage based cell dimensions with the build-grid mixin.
 * 
 * Example:
 * @include build-grid( 'cell-', 2 4, '--desktop' );
 */
@media screen and (min-width: 30em) {
  /* Divisibles of 2 and 4 */
  .cell-1-2--tablet, .cell-2-4--tablet {
    width: 50%; }

  .cell-1-4--tablet {
    width: 25%; }

  .cell-3-4--tablet {
    width: 75%; } }
@media screen and (min-width: 48em) {
  /* Divisibles of 2, 3, 4, 5, 6, 7, 8 */
  .cell-1-2--desktop, .cell-2-4--desktop, .cell-3-6--desktop, .cell-4-8--desktop {
    width: 50%; }

  .cell-1-3--desktop, .cell-2-6--desktop {
    width: 33.33333%; }

  .cell-2-3--desktop, .cell-4-6--desktop {
    width: 66.66667%; }

  .cell-1-4--desktop, .cell-2-8--desktop {
    width: 25%; }

  .cell-3-4--desktop, .cell-6-8--desktop {
    width: 75%; }

  .cell-1-5--desktop {
    width: 20%; }

  .cell-2-5--desktop {
    width: 40%; }

  .cell-3-5--desktop {
    width: 60%; }

  .cell-4-5--desktop {
    width: 80%; }

  .cell-1-6--desktop {
    width: 16.66667%; }

  .cell-5-6--desktop {
    width: 83.33333%; }

  .cell-1-7--desktop {
    width: 14.28571%; }

  .cell-2-7--desktop {
    width: 28.57143%; }

  .cell-3-7--desktop {
    width: 42.85714%; }

  .cell-4-7--desktop {
    width: 57.14286%; }

  .cell-5-7--desktop {
    width: 71.42857%; }

  .cell-6-7--desktop {
    width: 85.71429%; }

  .cell-1-8--desktop {
    width: 12.5%; }

  .cell-3-8--desktop {
    width: 37.5%; }

  .cell-5-8--desktop {
    width: 62.5%; }

  .cell-7-8--desktop {
    width: 87.5%; } }
