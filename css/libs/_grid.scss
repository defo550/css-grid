/* -----------------------------------------------------------------------------
   Grid Layout - css/libs/_grid.scss
   -------------------------------------------------------------------------- */

/**
 * Mobile first grid layout, used to split any space into fractions.  By default
 * single column layout for mobile viewport sizes.
 *
 * Selector structure:
 *   .grid: Groups [cell-]'s together in a horizontal grid.
 *   .cell-[#]-[#]: Split's up a grid into sections.
 *
 * Example HTML:
 *
 * <div class="grid">
 *   <div class="cell-1-2"></div>
 *   <div class="cell-1-2"></div>
 * </div>
 */

@import 'mixins/_grid.scss';


// Grid Config
// -----------------------------------------------------------------------------

$grid-direction: left !default;
$cell-gutter: 24px !default;


// Grid placeholders
// -----------------------------------------------------------------------------

/* Grid Container
   -------------------------------------------------------------------------- */

// 1. Create placeholder to extend %grid to other elements as your project
// requires.  E.G. .header { @extend %grid; }.
// 2. Pulls .grid to the left to compensate for the padding-left set on the 
// [.cell-] sub-modules of the grid. 
// 3. Will remove random white-space b/w child HTML elements that are set to
// to 'display: inline-block.'

%grid { // 1
  display: block;

  margin: 0 0 0 #{-$cell-gutter}; // 2

  letter-spacing: -0.31em; // 3
  text-align: $grid-direction;
}

.grid {
  @extend %grid;
}


/* Cells
   -------------------------------------------------------------------------- */

// Placeholder for cell components.
// Can easily extend grid placeholder to sidebars, etc.

%cell {
  display: inline-block;

  width: 100%;
  margin: 0;
  padding: 0 0 0 $cell-gutter;

  letter-spacing: normal;
  text-align: $grid-direction;
  vertical-align: top;
  word-spacing: normal;
}

[class*="cell-"] {
  @extend %cell;
}


/* Row modifiers
   -------------------------------------------------------------------------- */

.grid--spacing {
  @extend %grid;

  margin-top: $cell-gutter;
  margin-bottom: $cell-gutter;
}

.grid--padding {
  @extend %grid;

  padding: $cell-gutter $cell-gutter $cell-gutter 0;
}


/* Cell dimensions
   -------------------------------------------------------------------------- */

/**
 * Create percentage based cell dimensions with the build-grid mixin.  Pass an
 * optional string argument (ie $modifier) to mixin to create special modifiers
 * for various viewport dimensions.
 *
 * Example:
 * @include build-grid( 2 4, '--desktop' );
 */

@media screen and ( min-width: 30em ) {

  /* Divisibles of 2 and 4 */

  @include build-grid( 2 4, '--tablet' );

}


@media screen and ( min-width: 48em ) {

  /* Divisibles of 2, 3, 4, 5, 6, 7, 8 */

  @include build-grid( 2 3 4 5 6 7 8, '--desktop' );

}



